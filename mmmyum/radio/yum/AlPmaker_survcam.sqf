/*
[AlPmaker Surveillance Camera] 
14:39 17/10/12
v .09 beta

credits to Gigan for default cam script.

[Benefits]:

- allow to spectate players
- deactivates on key pressed (Space)
- many hotkeys to control camera
- different modes of vision (def,nv,ti)
- different modes of View
- different modes of camera position (follow is little buggy :(  use behind+focus)
- works with "vilayer like" anticheat script.


[How to use]:

1) Exec script
2) Use hotkeys listed below
3) \0/ Profit! :)

[Keybinds]

W,A,S,D,Q,Z,2,X                 : Camera Move
Mouse Move                      : Camera Turn
Mouse Wheel                     : Camera Zoom
N                               : Night / Thermal Vision
B                               : Toggle Behind Mode
F                               : Toggle Follow Mode
C                               : Toggle Focus Mode
V                               : Change Camera View Mode
Space                           : Quit

*/

//Configuration


#define CFMOVE 0.8 // Move Speed ( Recommended 0.0-1.0 )
#define CFTRK 0.3 // Turn Speed ( Recommended 0.0-1.0 )
#define CFWHEEL 0.3 // Zoom Speed ( Recommended 0.0-1.0 )

// Show unit type in Unit List and Map. ( true | false )
#define DETECTOBJECTDISTANCE viewDistance // Radius distance to which units is listed in Unit List and groups showed in Map.
#define SHOWNOTICETEXT true // Enable / disable notify text when mode is switches. ( true | false )
#define SHOWUNITNAME true // Enable / disable notify unit name when unit is switches. ( true | false )
#define RADIOMESSAGE false // Enable / disable following unit radio massage in SurvCam View. ( true | false )
#define SWITCHSMOOTH true // Smoothly unit switching movement. ( true | false )
#define SWITCHADJDIS true // Camera and unit distance adjusts with unit size after unit switches. ( true | false )
#define SWITCHCENTER false // The unit shows up in screen center after unit switches. ( true | false )

// Keybind

#define KEYMOVEFRONT 17 // Camera Move Front ( default : 17 )
#define KEYMOVEBACK 31 // Camera Move Back ( default : 31 )
#define KEYMOVELEFT 30 // Camera Move Left ( default : 30 )
#define KEYMOVERIGHT 32 // Camera Move Right ( default : 32 )
#define KEYMOVEUP 16 // Camera Move Up ( default : 16 )
#define KEYMOVEDOWN 44 // Camera Move Down ( default : 44 )
#define KEYMOVESTRFRONT 3 // Camera Move Straight Front ( default : 3 )
#define KEYMOVESTRBACK 45 // Camera Move Straight Back ( default : 45 )
#define KEYMODEFOLLOW 33 // Toggle Follow Mode ( default : 33 )
#define KEYMODEBEHIND 48 // Toggle Behind Mode ( default : 48 )
#define KEYMODEFOCUS 46 // Toggle Focus Mode ( default : 46 )
#define KEYMODEVIEW 47 // Change Camera View Mode ( default : 47 )
#define KEYUNITNEXT 200 // Near Unit Switch Next ( default : 200 )
#define KEYUNITPREVIOUS 208 // Near Unit Switch Previous ( default : 208 )
#define KEYFLIR 49 // Night / Thermal Visions ( default : 49 )
#define KEYQUIT 57 // Quit ( default : 57 )


//=================================================================================
// Advanced Parameter

// Initial Camera Mode Enable/Disable Statement
#define INITFOLLOWMODE false
#define INITBEHINDMODE true
#define INITFOCUSMODE true

// Initial Camera Position
#define INITCAMDISY 7.5
#define INITCAMDISZ 2.5
#define INITCAMAGL -8
#define INITCAMZOOM 0.7

// Mouse Move Parameter
#define MOUSEMOVEACCX 0.9
#define MOUSEMOVEACCY 2.6

// Attenuation Coefficient of Camera Movement
#define MOVEATTEN 0.8
#define TURNATTEN 0.8
#define ZOOMATTEN 0.8

// Behind Mode Parameter
#define BEHINDSPDAROUND 0.056
#define BEHINDSPDROTATE 2.7

// Smooth Switch Parameter
#define SWITCHSPEED 510

//End of configuration

 survcam = { if (isNil "SurvCamKill") then { SurvCamKill = false };  SurvCam_KD = [controlNull,-1,false,false,false]; SurvCam_KU = [controlNull,-1,false,false,false]; SurvCam_MD = [controlNull,-1,0.5,0.5,false,false,false]; SurvCam_MU = [controlNull,-1,0.5,0.5,false,false,false]; SurvCam_MM = [controlNull,0.0,0.0]; SurvCam_MW = [controlNull,0];  SurvCam_MC = false; SurvCam_MCP = [0.0,0.0,0.0];  SurvCam_LSC = [0,-1];  SurvCam_B = false; SurvCam_BId = "";  SurvCam_O = objnull;  SurvCam_S = false; SurvCam_X = 0.0; SurvCam_Y = 0.0;  SurvCam_F = false;  _l = true; _quit = false; _w = accTime / (diag_fps * 2);  _o = objnull;_o_l = objnull;_c = objnull; _dr = 0.0;_dv = 0.0;_zm = INITCAMZOOM; _acdr = 0.0;_acdv = 0.0;_aczm = 0.0; _acx = 0.0;_acy = 0.0;_acz = 0.0; _op = getPosATL player; _cp = [0.0,0.0,0.0];_cp_r = [0.0,0.0,0.0]; _cfzm = sin((_zm / 1.8) * 90); camUseNVG false; _nvg = 0; _cfalt = 1.0;  _initobject = objnull; _initcamview = cameraView; _initacctime = accTime; _initteamswitch = teamSwitchEnabled; enableTeamSwitch false; _help = false; _mapsize = [INITMAPSIZE,INITMAPSIZE];  _cgk = -1;  _be = INITBEHINDMODE; _fo = INITFOLLOWMODE; _fc = INITFOCUSMODE;  _ehid_keydown = -1; _ehid_keyup = -1; _ehid_mousemove = -1; _ehid_mousezchange = -1; _ehid_mousebd = -1; _ehid_mousebu = -1;  _k = []; _kt = diag_ticktime; _kte = 0.0; _kd = -1; _ku = 0; _md = -1; _mu = -1; _wl = 0.0; _oc = false; _ocl = false; _ocm = false; _mm = [0.0,0.0]; _acm = accTime^1.5 + 0.007; _lsc = -1;   _cy_ol_g = []; _cy_ol = []; _cy_n = 0; _cy_i = 0; _cy_sn = 0;  _sm_l = false; _sm_n = 0; _sm_d = 0.0; _sm_cp = [0.0,0.0,0.0]; _sm_op = [0.0,0.0,0.0]; _sm_cods = [0.0,0.0,0.0]; _sm_cods_h = 0.0; _sm_crt = 0.0; _sm_codv = 0.0; _sm_dv_d = 0.0; _sm_cp_t = [0.0,0.0,0.0]; _sm_cp_t_l = [0.0,0.0,0.0];  _re_camobjdir = 0.0; _re_cp_r_l = [0.0,0.0,0.0];  _fo_objdir = 0.0; _fo_cods = 0.0; _fo_cods_z = 0.0; _fo_camobjdis_last = sqrt(INITCAMDISY^2 + INITCAMDISZ^2); _fo_camobjdive_last = 0.0; _fo_camdir_add = 0.0;_fo_camobjdir_rel_last = 0.0;_fo_dir_last = 0.0;_fo_dive_last = 0.0;  _be_crt = 0.0; _be_odr = 0.0; _be_odv = 0.0; _be_odv_mx = 0.0; _be_cdr_a = 0.0; _be_cdr_t = 0.0; _be_cdr_d = 0.0; _be_codr = 0.0; _be_codr_t = 0.0; _be_codr_d = 0.0; _be_codr_a = 0.0; _be_cdv_a = 0.0; _be_codv = 0.0; _be_codv_t = 0.0; _be_codv_d = 0.0; _be_codv_c = 0.0; _be_codv_r = 0.0; _be_cods_t = sqrt(INITCAMDISY^2 + INITCAMDISZ^2); _be_cods = _be_cods_t; _be_cftn = 0.0; _be_ofz = 0.0;  _fc_op = [0.0,0.0,0.0]; _fc_cods = 0.0; _fc_odr = 0.0; _fc_codr = 0.0; _fc_codr_d = 0.0; _fc_codv_d = 0.0; _fc_cdr_a = 0.0; _fc_cdv_a = 0.0; _fc_crt = 0.0;   _vm = 0;  _ChangeModeFollow = { _fo = !(_fo);  if (_fo) then { if (SHOWNOTICETEXT) then { titleText[ "Follow Mode Enabled", "plain down", _w*15 ] };  _cfalt = 1.0;  if (_be) then { _be_odr = ((getdir _o) -90.0) * -1; if (_be_odr >= 360.0) then { _be_odr = _be_odr - 360.0 }; if (_be_odr < 0.0) then { _be_odr = _be_odr + 360.0 };  _be_cods_t = _fo_camobjdis_last; _be_codv_t = _fo_camobjdive_last; _cp_r = [ _be_cods_t * cos(_be_odr+180.0-_fo_camobjdir_rel_last) * (cos _be_codv_t), _be_cods_t * sin(_be_odr+180.0-_fo_camobjdir_rel_last) * (cos _be_codv_t), -_be_cods_t * (sin _be_codv_t) + _be_ofz];  _dr = _fo_dir_last; _dv = _fo_dive_last; } else { _cp_r = [ cos(_dr+180) * _fo_cods, sin(_dr+180) * _fo_cods, _fo_cods_z ]; _dv = _fo_dive_last; }; } else { if (SHOWNOTICETEXT) then { titleText[ "Follow Mode Disabled", "plain down", _w*15 ] };  _fo_camobjdis_last = sqrt((_cp_r select 0)^2 + (_cp_r select 1)^2 + ((_cp_r select 2)-_be_ofz)^2); _fo_camobjdive_last = ( ((_cp_r select 2) - _be_ofz) atan2 ((sqrt((_cp_r select 0)^2 + (_cp_r select 1)^2))) ) * -1;  _fo_objdir = ((getdir _o) -90.0) * -1; if (_fo_objdir >= 360.0) then { _fo_objdir = _fo_objdir - 360.0 }; if (_fo_objdir < 0.0) then { _fo_objdir = _fo_objdir + 360.0 };  _fo_camobjdir_rel_last = _fo_objdir - (( ((_cp_r select 0) atan2 (_cp_r select 1)) + 90.0 ) * -1); if (_fo_camobjdir_rel_last >= 360.0) then { _fo_camobjdir_rel_last = _fo_camobjdir_rel_last - 360.0 }; if (_fo_camobjdir_rel_last < 0.0) then { _fo_camobjdir_rel_last = _fo_camobjdir_rel_last + 360.0 };  _fo_dive_last = _dv; _fo_dir_last = _dr;  if (_be) then {if (_fc) then {_fc_cdr_a = _be_cdr_a;};} else { if (_fc) then { _fc_cdr_a = ( ( ((getPosASL _o select 0) - (getPosASL _c select 0)) atan2 ((getPosASL _o select 1) - (getPosASL _c select 1)) ) -90.0 ) * -1; if ( _fc_cdr_a >= 360.0 ) then { _fc_cdr_a = _fc_cdr_a - 360.0 }; if ( _fc_cdr_a < 0.0 ) then { _fc_cdr_a = _fc_cdr_a + 360.0 }; _fc_cdr_a = _dr - _fc_cdr_a; if ( _fc_cdr_a >= 360.0 ) then { _fc_cdr_a = _fc_cdr_a - 360.0 }; if ( _fc_cdr_a < 0.0 ) then { _fc_cdr_a = _fc_cdr_a + 360.0 }; }; }; }; };   _ChangeModeBehind = { _be = !(_be);  if (_be) then { if (SHOWNOTICETEXT) then { titleText[ "Behind Mode Enabled", "plain down", _w*15 ] };  if (_fo) then { _be_cods_t = sqrt((_cp_r select 0)^2 + (_cp_r select 1)^2 + ((_cp_r select 2)-_be_ofz)^2); _be_cods = _be_cods_t;  _be_codv_t = ( ((_cp_r select 2) - _be_ofz) atan2 ((sqrt((_cp_r select 0)^2 + (_cp_r select 1)^2))) ) * -1; _be_codv = _be_codv_t;  _be_odr = ((getdir _o) -90.0) * -1; if (_be_odr >= 360.0) then { _be_odr = _be_odr - 360.0 }; if (_be_odr < 0.0) then { _be_odr = _be_odr + 360.0 };  _dr = _be_odr; _be_cdr_a = 0.0; _be_codr_a = 0.0; _cp_r = [ _be_cods_t * cos(_be_odr+180.0), _be_cods_t * sin(_be_odr+180.0), _cp_r select 2 ]; } else { _be_cdr_a = 0.0; _be_codr_a = 0.0; _fo_camobjdir_rel_last = 0.0; _fo_dir_last = ((getdir _o) -90.0) * -1; }; } else {if (SHOWNOTICETEXT) then { titleText[ "Behind Mode Disabled", "plain down", _w*15 ] };}; };   _ChangeModeFocus = { _fc = !(_fc);  if (_fc) then { if (SHOWNOTICETEXT) then { titleText[ "Focus Mode Enabled", "plain down", _w*15 ] };  if (!_fo) then  { _fc_sw_codr = ( ( ((getPosASL _o select 0) - (getPosASL _c select 0)) atan2 ((getPosASL _o select 1) - (getPosASL _c select 1)) ) +90 ) * -1; _cp_r = [ cos(_fc_sw_codr) * _fo_cods, sin(_fc_sw_codr) * _fo_cods, _fo_cods_z ]; _op = getPosASL _o;  _fc_cdr_a = 0.0; _fc_cdv_a = 0.0;  if (_be) then { _cp_r = [ cos(((getdir _o)+90)*-1) * _fo_cods, sin(((getdir _o)+90)*-1) * _fo_cods, _fo_cods_z ];  _dr = ((getdir _o) -90) * -1; if (_dr >= 360.0) then { _dr = _dr - 360.0 }; if (_dr < 0.0) then { _dr = _dr + 360.0 }; }; }; } else {if (SHOWNOTICETEXT) then { titleText[ "Focus Mode Disabled", "plain down", _w*15 ] };}; }; _UpdateCycleUnits = {         { if (!(_x in _cy_ol_g) and (!isnull _x) and (getPlayerUID _x != "")) then   { _cy_ol_g set [count _cy_ol_g, _x]; [_x] spawn  {  private ["_u"];  _u = _this select 0;  while {spectate and (!isnull _u) and (getPlayerUID _u != "")} do  {  sleep 0.01;  };  if (_u in _cy_ol_g) then  {  _cy_ol_g set [(_cy_ol_g find _u), -1];  _cy_ol_g = _cy_ol_g - [-1];   };  true; };  }; } forEach Entities "CAManBase";  { if ((count crew _x)>0) then  { {       if (!(_x in _cy_ol_g) and (!isnull _x) and (getPlayerUID _x != "")) then   { _cy_ol_g set [count _cy_ol_g, _x]; [_x] spawn  {  private ["_u"];  _u = _this select 0;  while {spectate and (vehicle _u !=_u) and (getPlayerUID _u != "")} do  {  sleep 0.01;  };  if (_u in _cy_ol_g) then  {  _cy_ol_g set [(_cy_ol_g find _u), -1];  _cy_ol_g = _cy_ol_g - [-1];   };  true; };  }; } forEach crew _x; }; } foreach (Entities "LandVehicle"+ Entities "Air" + Entities"Ship");  };  _SmoothMove = { SurvCam_KD set [1,-1]; SurvCam_KU set [1,-1]; SurvCam_MD set [1,-1]; SurvCam_MU set [1,-1];  _sm_l = true; _sm_n = 0; _sm_cp = getPosASL _c; _sm_op = getPosASL _o; _sm_cp_t_l = [ (_sm_op select 0) + (_cp_r select 0), (_sm_op select 1) + (_cp_r select 1), (_sm_op select 2) + (_cp_r select 2) ];  switch (true) do { case (_o isKindOf "Car"): { _sm_d = 0.06 }; case (_o isKindOf "Tank"): { _sm_d = 0.08 }; case (_o isKindOf "Helicopter"): { _sm_d = 0.1 }; case (_o isKindOf "Air"): { _sm_d = 0.12 }; case (_o isKindOf "Ship"): { _sm_d = 0.06 }; default { _sm_d = 0.04 }; };  while { ( [_sm_cp select 0, _sm_cp select 1] distance [_sm_cp_t_l select 0, _sm_cp_t_l select 1] ) > (_sm_d + (sqrt((velocity _o select 0)^2 + (velocity _o select 1)^2)*0.01)) and (_sm_n < 100) and _sm_l } do { _aczm = _aczm * ZOOMATTEN;  if (!(isNil "SurvCam_KD")) then { _kd = SurvCam_KD select 1 }; if (!(isNil "SurvCam_KU")) then { _ku = SurvCam_KU select 1 }; SurvCam_KD set [1,-1]; SurvCam_KU set [1,-1];  if (_kd == KEYUNITNEXT or _kd == KEYUNITPREVIOUS) then { if (_cgk == KEYUNITNEXT and _kd == KEYUNITPREVIOUS) then { _o = _o_l; if ( SWITCHADJDIS ) then { call _SwitchAdjustDistance }; }; if (_cgk == KEYUNITPREVIOUS and _kd == KEYUNITNEXT) then { _o = _o_l; if ( SWITCHADJDIS ) then { call _SwitchAdjustDistance }; }; _cgk = -1;  _sm_l = false; };  if (!(isNil "SurvCam_OC")) then { _oc = SurvCam_OC select 3 };  if (!(isNil "SurvCam_MD")) then { _md = SurvCam_MD select 1 }; if (!(isNil "SurvCam_MU")) then { _mu = SurvCam_MU select 1 }; if (_md == 0 and _mu == 0 and !(_oc)) then { _sm_l = false; }; if ( (_mu == 0) or (_mu == 1 and _md == 1) ) then { SurvCam_MD set [1, -1]; SurvCam_MU set [1, -1]; }; if (_mu == 1) then { _aczm = 0.0; _zm = 0.7; _c camSetFov _zm; _cfzm = sin ((_zm / 1.8) * 90.0); };  _wl = SurvCam_MW select 1; if (_wl > 0.00001 or _wl < -0.00001) then { _aczm = _aczm - _wl * 0.12 * CFWHEEL * sin((_zm / 2.0) * 90.0); SurvCam_MW set [1, 0]; }; if ((abs _aczm) > 0.00001) then { _zm = _zm + _aczm; if (_zm < 0.01) then { _zm = 0.01; _aczm = 0.0; }; if (_zm > 2.0) then { _zm = 2.0; _aczm = 0.0; }; _c camSetFov _zm; _cfzm = sin ((_zm / 1.8) * 90); };  if (_ku == KEYMODEFOLLOW) then {call _ChangeModeFollow;}; if (_ku == KEYMODEBEHIND) then {call _ChangeModeBehind;}; if (_ku == KEYMODEFOCUS) then {call _ChangeModeFocus;};  if (_ku == KEYFLIR) then { _nvg = (_nvg + 1) mod 5; switch (_nvg) do { case (0):{false setCamUseTi 0;}; case (1):{camUseNVG true;}; case (2):{camUseNVG false;true setCamUseTi 0;}; case (3):{true setCamUseTi 1;}; case (4):{true setCamUseTi 2;}; }; };  if (_ku == KEYMODEVIEW) then { _vm = (_vm + 1) mod 4; switch (_vm) do { case (0):{if (SHOWNOTICETEXT) then { titleText[ "SurvCam View", "plain down", _w*15 ] };}; case (1):{if (SHOWNOTICETEXT) then { titleText[ "1st Person View", "plain down", _w*15 ] };}; case (2):{if (SHOWNOTICETEXT) then { titleText[ "3rd Person View", "plain down", _w*15 ] };}; case (3):{if (SHOWNOTICETEXT) then { titleText[ "Variable View", "plain down", _w*15 ] };}; }; };  _sm_op = getPosASL _o;  if ( _fo and _be ) then { _be_odr = ((getdir _o) -90) * -1; if (_be_odr >= 360.0) then { _be_odr = _be_odr - 360.0 }; if (_be_odr < 0.0) then { _be_odr = _be_odr + 360.0 };  _be_cdr_t = _dr - _be_cdr_a; if ( _be_cdr_t >= 360.0 ) then { _be_cdr_t = _be_cdr_t - 360.0 }; if ( _be_cdr_t < 0.0 ) then { _be_cdr_t = _be_cdr_t + 360.0 };  _be_cdr_d = _be_odr - _be_cdr_t; if ( _be_cdr_d >= 360.0 ) then { _be_cdr_d = _be_cdr_d - 360.0 }; if ( _be_cdr_d < 0.0 ) then { _be_cdr_d = _be_cdr_d + 360.0 };  _be_cdr_d = _be_cdr_d + _be_codr_a; if ( _be_cdr_d >= 360.0 ) then { _be_cdr_d = _be_cdr_d - 360.0 }; if ( _be_cdr_d < 0.0 ) then { _be_cdr_d = _be_cdr_d + 360.0 };  switch (true) do { case (_be_cdr_d >= 0.0 and _be_cdr_d < 180.0) : { _dr = _dr + (abs(sin(_be_cdr_d/2.0))) * 15.0 * ((_sm_n atan2 15.0)/90.0) }; case (_be_cdr_d >= 180.0 and _be_cdr_d < 360.0) : { _dr = _dr - (abs(sin(_be_cdr_d/2.0))) * 15.0 * ((_sm_n atan2 15.0)/90.0) }; }; if ( _dr >= 360.0 ) then { _dr = _dr - 360.0 }; if ( _dr < 0.0 ) then { _dr = _dr + 360.0 };  _cp_r = [ _be_cods_t * cos(_be_odr+180.0+_be_codr_a) * (cos _be_codv_t), _be_cods_t * sin(_be_odr+180.0+_be_codr_a) * (cos _be_codv_t), -_be_cods_t * (sin _be_codv_t) + _be_ofz]; };   if ( !(_fo) and _fc ) then { if ( _be ) then { _fc_odr = ((getdir _o) -90.0) * -1; if (_fc_odr >= 360.0) then { _fc_odr = _fc_odr - 360.0 }; if (_fc_odr < 0.0) then { _fc_odr = _fc_odr + 360.0 };  _be_cdr_t = _dr - _fc_cdr_a; if ( _be_cdr_t >= 360.0 ) then { _be_cdr_t = _be_cdr_t - 360.0 }; if ( _be_cdr_t < 0.0 ) then { _be_cdr_t = _be_cdr_t + 360.0 };  _be_cdr_d = _fc_odr - _be_cdr_t; if ( _be_cdr_d >= 360.0 ) then { _be_cdr_d = _be_cdr_d - 360.0 }; if ( _be_cdr_d < 0.0 ) then { _be_cdr_d = _be_cdr_d + 360.0 };  _be_cdr_d = _be_cdr_d + _be_codr_a; if ( _be_cdr_d >= 360.0 ) then { _be_cdr_d = _be_cdr_d - 360.0 }; if ( _be_cdr_d < 0.0 ) then { _be_cdr_d = _be_cdr_d + 360.0 };  switch (true) do { case (_be_cdr_d >= 0.0 and _be_cdr_d < 180.0) : { _dr = _dr + (abs(sin(_be_cdr_d/2.0))) * 15.0 * ((_sm_n atan2 15.0)/90.0) }; case (_be_cdr_d >= 180.0 and _be_cdr_d < 360.0) : { _dr = _dr - (abs(sin(_be_cdr_d/2.0))) * 15.0 * ((_sm_n atan2 15.0)/90.0) }; }; if ( _dr >= 360.0 ) then { _dr = _dr - 360.0 }; if ( _dr < 0.0 ) then { _dr = _dr + 360.0 };  _cp_r = [ cos(_fc_odr+180.0+_be_codr_a) * _fo_cods, sin(_fc_odr+180.0+_be_codr_a) * _fo_cods, _fo_cods_z ]; } else { _fc_op = _sm_op;  _fc_codr = ( ( ((_fc_op select 0) - (_fc_cp select 0)) atan2 ((_fc_op select 1) - (_fc_cp select 1)) ) -90.0 ) * -1; if (_fc_codr >= 360.0) then { _fc_codr = _fc_codr - 360.0 }; if (_fc_codr < 0.0) then { _fc_codr = _fc_codr + 360.0 };  _fc_codr_d = _dr - _fc_codr; if (_fc_codr_d >= 360.0) then { _fc_codr_d = _fc_codr_d - 360.0 }; if (_fc_codr_d < 0.0) then { _fc_codr_d = _fc_codr_d + 360.0 };  _fc_codr_d = _fc_codr_d - _fc_cdr_a; if (_fc_codr_d >= 360.0) then { _fc_codr_d = _fc_codr_d - 360.0 }; if (_fc_codr_d < 0.0) then { _fc_codr_d = _fc_codr_d + 360.0 };  switch (true) do { case (_fc_codr_d > 0.0 and _fc_codr_d < 180.0) : { _dr = _dr - (abs(sin(_fc_codr_d/2.0))) * 20.0 }; case (_fc_codr_d > 180.0 and _fc_codr_d < 360.0) : { _dr = _dr + (abs(sin(_fc_codr_d/2.0))) * 20.0 }; }; if ( _dr >= 360.0 ) then { _dr = _dr - 360.0 }; if ( _dr < 0.0 ) then { _dr = _dr + 360.0 };  _fc_sw_codr = ( ( (_re_cp_r_l select 0) atan2 (_re_cp_r_l select 1) ) -90.0 ) * -1; _cp_r = [ cos(_fc_sw_codr) * _fo_cods, sin(_fc_sw_codr) * _fo_cods, _fo_cods_z ]; };  _sm_cods_h = [_sm_cp select 0, _sm_cp select 1] distance [_sm_op select 0, _sm_op select 1]; if ( _o isKindOf "Man" ) then { _sm_crt = (((_o selectionPosition "head_axis") select 2) - 1.57) * (abs sin(30.0/(_sm_cods_h+0.1))) };  _sm_codv = (sqrt(((_sm_op select 0) - (_sm_cp select 0))^2 + ((_sm_op select 1) - (_sm_cp select 1))^2) atan2 (((_sm_op select 2) - (_sm_cp select 2)) + _be_ofz + _sm_crt) - 90.0) * -1; _sm_dv_t = _sm_codv + _fc_cdv_a; _sm_dv_d = _sm_dv_t - _dv;  switch (true) do { case (_sm_dv_d > 0.0) : { _dv = _dv + abs sin(_sm_dv_d/2.0) * 15.0 * ((_sm_n atan2 15.0)/90.0) }; case (_sm_dv_d <= 0.0) : { _dv = _dv - abs sin(_sm_dv_d/2.0) * 15.0 * ((_sm_n atan2 15.0)/90.0) }; }; _dv = (_dv min 89.0) max -89.0; };    if ( SWITCHCENTER) then { if ( _fo or ( !(_fc) and !(_fo) ) ) then { _sm_cods_h = sqrt(((_sm_cp select 0) - (_sm_op select 0))^2 + ((_sm_cp select 1) - (_sm_op select 1))^2.0); if ( _o isKindOf "Man" ) then { _sm_crt = (((_o selectionPosition "head_axis") select 2) - 1.57) * (abs sin(30.0/(_sm_cods_h+0.1))) };  _sm_codv = (sqrt(((_sm_op select 0) - (_sm_cp select 0))^2 + ((_sm_op select 1) - (_sm_cp select 1))^2.0) atan2 (((_sm_op select 2) - (_sm_cp select 2)) + _be_ofz + _sm_crt) - 90.0) * -1; _sm_dv_d = _sm_codv - _dv;  switch (true) do { case (_sm_dv_d > 0.0) : { _dv = _dv + abs sin(_sm_dv_d/2.0) * 15.0 * ((_sm_n atan2 15.0)/90.0) }; case (_sm_dv_d <= 0.0) : { _dv = _dv - abs sin(_sm_dv_d/2.0) * 15.0 * ((_sm_n atan2 15.0)/90.0) }; }; _dv = (_dv min 89.0) max -89.0; _be_cdv_a = _sm_dv_d; }; };   if (_be) then {if (_o isKindOf "Man") then { _be_crt = (((_o selectionPosition "head_axis") select 2) - 1.57) * (abs sin(30.0/(_be_cods+0.1))) };};  _sm_cp_t = [ (_sm_op select 0) + (_cp_r select 0), (_sm_op select 1) + (_cp_r select 1), (_sm_op select 2) + (_cp_r select 2) ]; _sm_cods = [ (_sm_cp_t select 0) - (_sm_cp select 0), (_sm_cp_t select 1) - (_sm_cp select 1), (_sm_cp_t select 2) - (_sm_cp select 2) ]; _sm_cp = [ (_sm_cp select 0) + ((((_sm_cods select 0)/3)) * ((_sm_n atan2 110.0)/90.0)) + ((_sm_cp_t select 0) - (_sm_cp_t_l select 0)) * ((_sm_n atan2 5)/90.0), (_sm_cp select 1) + ((((_sm_cods select 1)/3.0)) * ((_sm_n atan2 110.0)/90.0)) + ((_sm_cp_t select 1) - (_sm_cp_t_l select 1)) * ((_sm_n atan2 5.0)/90.0), (_sm_cp select 2) + ((((_sm_cods select 2)/3.0)) * ((_sm_n atan2 110.0)/90.0)) + (((_sm_cp_t select 2) - (_sm_cp_t_l select 2)) * ((_sm_n atan2 5.0)/90.0)) ]; _c setPosASL [_sm_cp select 0, _sm_cp select 1, (_sm_cp select 2) + _be_crt]; _c camSetTarget [ (_sm_cp select 0) + (cos _dr) * (cos _dv) * 100000.0, (_sm_cp select 1) + (sin _dr) * (cos _dv) * 100000.0, (_sm_cp select 2) + (sin _dv) * 100000.0]; _c camCommit 0;  _sm_cp_t_l = _sm_cp_t;  if ( (getPosATL _c select 2) < 0.5 ) then { _c setPosATL [ getPosASL _c select 0, getPosASL _c select 1, 0.501 - _be_crt ] };  _sm_n = _sm_n + 1; _w = accTime / (diag_fps * 2); sleep _w; };  _sm_l = false;  SurvCam_KD set [1,-1]; SurvCam_KU set [1,-1]; _kd = -1; _ku = -1; };  _SwitchAdjustDistance = { switch (true) do { case (_o isKindOf "Car"):{_cp_r set [ 2, 1.2 + 1.2 ];_fo_cods = 6.6;_fo_cods_z = 2.4;_be_ofz = 2.4;}; case (_o isKindOf "Tank"):{_cp_r set [ 2, 1.2 + 1.75 ];_fo_cods = 7.5;_fo_cods_z = 2.95;_be_ofz = 2.95;}; case (_o isKindOf "Helicopter"):{_cp_r set [ 2, 1.2 + 2.3 ];_fo_cods = 10.0;_fo_cods_z = 3.5;_be_ofz = 3.5;}; case (_o isKindOf "Air"):{_cp_r set [ 2, 1.2 + 2.7 ];_fo_cods = 15.0;_fo_cods_z = 2.9;_be_ofz = 2.8;}; case (_o isKindOf "Ship"):{_cp_r set [ 2, 1.2 + 1.5 ];_fo_cods = 7.5;_fo_cods_z = 2.7;_be_ofz = 2.7;}; default {_cp_r set [ 2, 1.2 + 0.5 ];_fo_cods = 2.6;_fo_cods_z = 1.7;_be_ofz = 1.57;}; };  if ( _be ) then { _be_cods_t = sqrt((_fo_cods * (cos _be_codr) * (-1))^2 + (_fo_cods * (sin _be_codr) * (-1))^2 + (_cp_r select 2)^2); _be_cods = _be_cods_t; };  if ( _fo and !(_be) ) then { _re_camobjdir = ( ( (_re_cp_r_l select 0) atan2 (_re_cp_r_l select 1) ) -90.0 ) * -1; _cp_r = [ cos(_re_camobjdir) * _fo_cods, sin(_re_camobjdir) * _fo_cods, _fo_cods_z ]; }; };   _ResetCamera = { _acx = 0;_acy = 0;_acz = 0;_acdr = 0;_acdv = 0;_aczm = 0; titleText[ "", "plain down", 0.0 ];  if (_vm > 0) then {_c cameraEffect ["Internal", "Back"];};  _re_cp_r_l = _cp_r;  if ( SWITCHADJDIS ) then{call _SwitchAdjustDistance;};   if (!(_o isKindOf "Man")) then {_be_crt = 0.0;_fc_crt = 0.0;};  if ( SWITCHCENTER) then { if ( _be ) then {_be_cdr_a = 0.0;}; if ( !(_fo) and _fc ) then {_fc_cdr_a = 0.0;_fc_cdv_a = 0.0;}; }; if (DETECTOBJECTDISTANCE < (_o distance _o_l)) then {_smooth=false;} else {_smooth=false;}; if ( _smooth ) then { call _SmoothMove };  if ( _fo and _be ) then { _be_odr = ((getdir _o) -90.0) * -1; if (_be_odr >= 360.0) then { _be_odr = _be_odr - 360.0 }; if (_be_odr < 0.0) then { _be_odr = _be_odr + 360.0 };  _dr = _be_odr + _be_cdr_a; if (_dr >= 360.0) then { _dr = _dr - 360.0 }; if (_dr < 0.0) then { _dr = _dr + 360.0 };  _dr = _dr + _be_codr_a; if ( _dr >= 360.0 ) then { _dr = _dr - 360.0 }; if ( _dr < 0.0 ) then { _dr = _dr + 360.0 };  _cp_r = [ _be_cods_t * cos(_be_odr+180.0+_be_codr_a) * (cos _be_codv_t), _be_cods_t * sin(_be_odr+180.0+_be_codr_a) * (cos _be_codv_t), -_be_cods_t * (sin _be_codv_t) + _be_ofz]; };  if ( !(_fo) and _fc ) then { if ( _be ) then { _fc_odr = ((getdir _o) -90.0) * -1; if (_fc_odr >= 360.0) then { _fc_odr = _fc_odr - 360.0 }; if (_fc_odr < 0.0) then { _fc_odr = _fc_odr + 360.0 };  _dr = _fc_odr + _fc_cdr_a; if (_dr >= 360.0) then { _dr = _dr - 360.0 }; if (_dr < 0.0) then { _dr = _dr + 360.0 };  _dr = _dr + _be_codr_a; if ( _dr >= 360.0 ) then { _dr = _dr - 360.0 }; if ( _dr < 0.0 ) then { _dr = _dr + 360.0 };  _cp_r = [ cos(_fc_odr+180.0+_be_codr_a) * _fo_cods, sin(_fc_odr+180.0+_be_codr_a) * _fo_cods, _fo_cods_z ]; }; };  if ( !(_fo) and !(_fc) ) then {_cp_r = [ cos(_dr+180.0) * _fo_cods, sin(_dr+180.0) * _fo_cods, _fo_cods_z ];};   _op = getPosASL _o; _cp = [ (_op select 0) + (_cp_r select 0) , (_op select 1) + (_cp_r select 1), (_op select 2) + (_cp_r select 2) ]; _c setPosASL [ _cp select 0, _cp select 1, (_cp select 2) + _be_crt ]; _c camSetTarget [ (_cp select 0) + (cos _dr) * (cos _dv) * 100000.0, (_cp select 1) + (sin _dr) * (cos _dv) * 100000.0, (_cp select 2) + (sin _dv) * 100000.0]; _c camCommit 0;   switch (_vm) do { case (0):{_initobject switchCamera _initcamview;if (RADIOMESSAGE) then { vehicle _o switchCamera "INTERNAL" };}; case (1):{_c cameraEffect ["Terminate", "Back"];vehicle _o switchCamera "INTERNAL";}; case (2):{_c cameraEffect ["Terminate", "Back"];vehicle _o switchCamera "EXTERNAL";}; case (3):{_c cameraEffect ["Terminate", "Back"];vehicle _o switchCamera "GUNNER";}; };   _tx_crewname = ""; if ( count(crew _o) > 1 ) then { { if (((crew _o) select 0) != _x) then { _tx_crewname = _tx_crewname + ", " }; _tx_crewname = _tx_crewname + format["%1", name _x]; } forEach (crew _o); } else { _tx_crewname = name _o; };  if (SHOWUNITNAME) then { titleText[ format[ "%2", getText( configFile >> "CfgVehicles" >> (typeOf _o) >> "displayName" ), _tx_crewname], "plain down", _w*40 ] };  };   sleep _w;  _ehid_keydown = (findDisplay 46) displayAddEventHandler ["KeyDown", "SurvCam_KD = _this"]; _ehid_keyup = (findDisplay 46) displayAddEventHandler ["KeyUp", "SurvCam_KU = _this"]; _ehid_mousemove = (findDisplay 46) displayAddEventHandler ["MouseMoving", "SurvCam_MM = _this"]; _ehid_mousezchange = (findDisplay 46) displayAddEventHandler ["MouseZChanged", "SurvCam_MW = _this"]; _ehid_mousebd = (findDisplay 46) displayAddEventHandler ["MouseButtonDown", "SurvCam_MD = _this"]; _ehid_mousebu = (findDisplay 46) displayAddEventHandler ["MouseButtonUp", "SurvCam_MU = _this"];  if (isNil "_this") then { _o =  player } else { _o = vehicle (_this select 0) }; if (isNil"_o") then { _o = player }; _o_l = _o; _initobject = _o;  _dr = ((getdir _o)-90)*-1; _dv = INITCAMAGL; _cp_r = [ cos(_dr+180) * INITCAMDISY, sin(_dr+180) * INITCAMDISY, INITCAMDISZ ]; _op = getPosASL _o; _cp = [ (_op select 0) + (_cp_r select 0), (_op select 1) + (_cp_r select 1), (_op select 2) + (_cp_r select 2)];   _c = "camera" camCreate [0.0,0.0,0.0]; _c setPosASL [_cp select 0, _cp select 1, _cp select 2]; _c camSetTarget [ (_cp select 0) + (cos _dr) * (cos _dv) * 100000.0, (_cp select 1) + (sin _dr) * (cos _dv) * 100000.0, (_cp select 2) + (sin _dv) * 100000.0]; _c cameraEffect ["Internal", "Back"]; _c camSetFov _zm; _c camCommit 0;  sleep _w; showCinemaBorder false;  call _ResetCamera;  while {_l} do { spectate = true; _acx = _acx * MOVEATTEN;_acy = _acy * MOVEATTEN;_acz = _acz * MOVEATTEN;_acdr = _acdr * TURNATTEN;_acdv = _acdv * TURNATTEN;_aczm = _aczm * ZOOMATTEN;  if (!(isNil "SurvCam_OC")) then { _oc = SurvCam_OC select 3 };  if (!(isNil "SurvCam_MD")) then { _md = SurvCam_MD select 1 }; if (!(isNil "SurvCam_MU")) then { _mu = SurvCam_MU select 1 }; if ( (_mu == 0) or (_mu == 1 and _md == 1) ) then { _mbld = false;  if (!(isNil "SurvCam_OCL")) then { _ocl = SurvCam_OCL select 3 }; if (!(_oc) and !(_ocl)) then { call _ClickSwitch };  SurvCam_MD set [1, -1]; SurvCam_MU set [1, -1]; }; if (_mu == 1) then { _aczm = 0.0; _zm = 0.7; _c camSetFov _zm; _cfzm = sin ((_zm / 1.8) * 90.0); };  if (_vm == 0) then { _mm = [ SurvCam_MM select 1, SurvCam_MM select 2 ]; _acm = accTime^1.5 + 0.007; _acdr = _acdr + (_mm select 0) * -MOUSEMOVEACCX * CFTRK * _cfzm / (cos abs(_dv / (1.0 + _cfzm))) * _acm; _acdv = _acdv + (_mm select 1) * -MOUSEMOVEACCY * CFTRK * _cfzm * _acm;  _dr = _dr + _acdr; if (_dr >= 360.0) then { _dr = _dr - 360.0 }; if (_dr < 0.0) then { _dr = _dr + 360.0 };  _dv = _dv + _acdv; if (_dv > 89.9) then { _dv = 89.9; _acdv = 0.0; }; if (_dv < -89.9) then { _dv = -89.9; _acdv = 0.0; };  SurvCam_MM set [ 1, 0.0 ]; SurvCam_MM set [ 2, 0.0 ]; };  _wl = SurvCam_MW select 1; if ((_wl > 0.00001 or _wl < -0.00001)) then { _aczm = _aczm - _wl * 0.12 * CFWHEEL * sin((_zm / 2.0) * 90.0); SurvCam_MW set [1, 0]; }; if ((abs _aczm) > 0.00001) then { _zm = _zm + _aczm; if (_zm < 0.01) then { _zm = 0.01; _aczm = 0.0; }; if (_zm > 2.0) then { _zm = 2.0; _aczm = 0.0; }; _c camSetFov _zm; _cfzm = sin ((_zm / 1.8) * 90); };   if (!(isNil "SurvCam_KD")) then { _kd = SurvCam_KD select 1 }; if (!(isNil "SurvCam_KU")) then { _ku = SurvCam_KU select 1 }; SurvCam_KD set [1,-1]; SurvCam_KU set [1,-1]; if (_kd != -1 or _ku != -1) then {_kt = diag_tickTime}; if (count _k == 0 and _kd != -1) then { _k = _k + [_kd] }; if (count _k == 1 and _kd != _k select 0) then { _k = _k + [_kd] }; if (_ku in _k) then { _k = _k - [_ku] }; if (_oc) then {_k = _k - [KEYMOVEUP,KEYMOVEFRONT,KEYMOVELEFT,KEYMOVEBACK,KEYMOVERIGHT,KEYMOVEDOWN,KEYMOVESTRBACK]}; if (diag_tickTime - _kt > 1.0) then { _k = [] };  if (count _k == 1) then { switch (_k select 0) do { case (KEYMOVEFRONT): { if (_be and _fo) then { _acx = _acx + 0.035 * CFMOVE * (cos _be_codr) * (cos _be_codv) * _cfzm; _acy = _acy + 0.035 * CFMOVE * (sin _be_codr) * (cos _be_codv) * _cfzm; _acz = _acz + 0.035 * CFMOVE * (sin _be_codv) * _cfzm; _be_cods_t = sqrt((_cp_r select 0)^2 + (_cp_r select 1)^2 + ((_cp_r select 2)-_be_ofz)^2) - 0.5; } else { _acx = _acx + 0.05 * (cos _dr) * CFMOVE * _cfzm * _cfalt; _acy = _acy + 0.05 * (sin _dr) * CFMOVE * _cfzm * _cfalt;  }; }; case (KEYMOVEBACK): { if (_be and _fo) then { _acx = _acx - 0.035 * CFMOVE * (cos _be_codr) * (cos _be_codv) * _cfzm; _acy = _acy - 0.035 * CFMOVE * (sin _be_codr) * (cos _be_codv) * _cfzm; _acz = _acz - 0.035 * CFMOVE * (sin _be_codv) * _cfzm; _be_cods_t = sqrt((_cp_r select 0)^2 + (_cp_r select 1)^2 + ((_cp_r select 2)-_be_ofz)^2) + 0.5; } else { _acx = _acx - 0.05 * (cos _dr) * CFMOVE * _cfzm * _cfalt; _acy = _acy - 0.05 * (sin _dr) * CFMOVE * _cfzm * _cfalt; }; }; case (KEYMOVELEFT): { if (_be and _fo) then { if ( (180 - abs(180 - _be_codr_d)) < 170 ) then { _be_codr_a = _be_codr_a - CFMOVE * 2.6 * _cfzm }; if ( _be_codr_a >= 360.0 ) then { _be_codr_a = _be_codr_a - 360.0 }; if ( _be_codr_a < 0.0 ) then { _be_codr_a = _be_codr_a + 360.0 }; } else { _acx = _acx - 0.05 * (sin _dr) * CFMOVE * _cfzm * _cfalt; _acy = _acy + 0.05 * (cos _dr) * CFMOVE * _cfzm * _cfalt; }; }; case (KEYMOVERIGHT): { if (_be and _fo) then { if ( (180 - abs(180 - _be_codr_d)) < 170 ) then { _be_codr_a = _be_codr_a + CFMOVE * 2.6 * _cfzm }; if ( _be_codr_a >= 360.0 ) then { _be_codr_a = _be_codr_a - 360.0 }; if ( _be_codr_a < 0.0 ) then { _be_codr_a = _be_codr_a + 360.0 }; } else { _acx = _acx + 0.05 * (sin _dr) * CFMOVE * _cfzm * _cfalt; _acy = _acy - 0.05 * (cos _dr) * CFMOVE * _cfzm * _cfalt; }; }; case (KEYMOVEUP): { if ( _fo ) then { if ( _be ) then { _be_codv_t = _be_codv_t - 1.0; if (_be_codv_t < -89.0) then { _be_codv_t = -89.0; _acdv = 0.0; }; } else {_acz = _acz + 0.05 * CFMOVE * _cfzm;}; } else {_acz = _acz + 0.05 * CFMOVE * _cfzm * _cfalt;}; }; case (KEYMOVEDOWN): { if ( _fo ) then { if ( _be ) then { _be_codv_t = _be_codv_t + 1.0; if (_be_codv_t > 89.0) then { _be_codv_t = 89.0; _acdv = 0.0; }; } else {_acz = _acz - 0.05 * CFMOVE * _cfzm;}; } else {_acz = _acz - 0.05 * CFMOVE * _cfzm * _cfalt;}; }; case (KEYMOVESTRFRONT): { if (_be and _fo) then { _acx = _acx + 0.075 * CFMOVE * (cos _dr) * (cos _dv) * _cfzm; _acy = _acy + 0.075 * CFMOVE * (sin _dr) * (cos _dv) * _cfzm; _acz = _acz + 0.075 * CFMOVE * (sin _dv) * _cfzm; _be_cods_t = sqrt(((_cp_r select 0)+_acx)^2 + ((_cp_r select 1)+_acy)^2 + (((_cp_r select 2)+_acz)-_be_ofz)^2); _be_codr_a = (( (((_cp_r select 0)+_acx) atan2 ((_cp_r select 1)+_acy)) + 90.0 ) * -1) - _be_odr; _be_codv_t = ( (((_cp_r select 2)+_acz) - _be_ofz) atan2 ((sqrt(((_cp_r select 0)+_acx)^2 + ((_cp_r select 1)+_acy)^2))) ) * (-1); _be_cdr_d = _be_cdr_d - _be_codr_a; } else { _acx = _acx + 0.075 * CFMOVE * (cos _dr) * (cos _dv) * _cfzm * _cfalt; _acy = _acy + 0.075 * CFMOVE * (sin _dr) * (cos _dv) * _cfzm * _cfalt; _acz = _acz + 0.075 * CFMOVE * (sin _dv) * _cfzm * _cfalt; }; }; case (KEYMOVESTRBACK): { if (_be and _fo) then { _acx = _acx - 0.075 * CFMOVE * (cos _dr) * (cos _dv) * _cfzm; _acy = _acy - 0.075 * CFMOVE * (sin _dr) * (cos _dv) * _cfzm; _acz = _acz - 0.075 * CFMOVE * (sin _dv) * _cfzm; _be_cods_t = sqrt(((_cp_r select 0)+_acx)^2 + ((_cp_r select 1)+_acy)^2 + (((_cp_r select 2)+_acz)-_be_ofz)^2); _be_codr_a = (( (((_cp_r select 0)+_acx) atan2 ((_cp_r select 1)+_acy)) + 90.0 ) * -1) - _be_odr; _be_codv_t = ( (((_cp_r select 2)+_acz) - _be_ofz) atan2 ((sqrt(((_cp_r select 0)+_acx)^2 + ((_cp_r select 1)+_acy)^2))) ) * (-1); _be_cdr_d = _be_cdr_d - _be_codr_a; } else { _acx = _acx - 0.075 * CFMOVE * (cos _dr) * (cos _dv) * _cfzm * _cfalt; _acy = _acy - 0.075 * CFMOVE * (sin _dr) * (cos _dv) * _cfzm * _cfalt; _acz = _acz - 0.075 * CFMOVE * (sin _dv) * _cfzm * _cfalt; }; }; }; };  if (_ku == KEYMODEFOLLOW) then {call _ChangeModeFollow;}; if (_ku == KEYMODEBEHIND) then {call _ChangeModeBehind;}; if (_ku == KEYMODEFOCUS) then {call _ChangeModeFocus;};  if (_kd == KEYUNITNEXT) then { call _UpdateCycleUnits;  if (count _cy_ol_g > 0) then { _cy_n = (_cy_ol_g find _o); if (count _cy_ol_g == (_cy_n+1)) then { _cy_n = -1}; _o = _cy_ol_g select (_cy_n+1); _cgk = _kd; call _ResetCamera; _o_l = _o; };  }; if (_kd == KEYUNITPREVIOUS) then { call _UpdateCycleUnits;  if (count _cy_ol_g > 0) then { _cy_n = (_cy_ol_g find _o); if ((_cy_n-1)<0) then { _cy_n = (count _cy_ol_g)}; _o = _cy_ol_g select (_cy_n-1); _cgk = _kd; call _ResetCamera; _o_l = _o; };  };  if (_ku == KEYFLIR) then { _nvg = (_nvg + 1) mod 5; switch (_nvg) do { case (0):{false setCamUseTi 0;}; case (1):{camUseNVG true;}; case (2):{camUseNVG false;true setCamUseTi 0;}; case (3):{true setCamUseTi 1;}; case (4):{true setCamUseTi 2;}; }; };  if (_ku == KEYMODEVIEW) then { _vm = (_vm + 1) mod 4;  switch (_vm) do { case (0): { _c cameraEffect ["Internal", "Back"]; _initobject switchCamera _initcamview; if (RADIOMESSAGE) then { vehicle _o switchCamera "INTERNAL" }; if (SHOWNOTICETEXT) then { titleText[ "SurvCam View", "plain down", _w*15 ] }; }; case (1): { _c cameraEffect ["Terminate", "Back"]; _o switchCamera "INTERNAL"; if (SHOWNOTICETEXT) then { titleText[ "1st Person View", "plain down", _w*15 ] }; }; case (2): { _o switchCamera "EXTERNAL"; if (SHOWNOTICETEXT) then { titleText[ "3rd Person View", "plain down", _w*15 ] }; }; case (3): { _o switchCamera "GUNNER"; if (SHOWNOTICETEXT) then { titleText[ "Variable View", "plain down", _w*15 ] }; }; }; };   if ( (_ku == KEYQUIT) or !(alive player) or SurvCamKill) then { if ( !(alive player) or SurvCamKill ) then { _quit = true };  if ( _ku == KEYQUIT ) then { setMousePosition [0.500,0.575]; _quit = true; SurvCam_KD set [1, -1]; SurvCam_KU set [1, -1]; };  if (_quit) then { setAccTime _initacctime;  titleText["","plain down",0.0]; camUseNVG false; false setCamUseTi 0; enableTeamSwitch _initteamswitch;  (findDisplay 46) displayRemoveEventHandler ["KeyDown", _ehid_keydown]; (findDisplay 46) displayRemoveEventHandler ["KeyUp", _ehid_keyup]; (findDisplay 46) displayRemoveEventHandler ["MouseMoving", _ehid_mousemove]; (findDisplay 46) displayRemoveEventHandler ["MouseZChanged", _ehid_mousezchange]; (findDisplay 46) displayRemoveEventHandler ["MouseButtonDown", _ehid_mousebd]; (findDisplay 46) displayRemoveEventHandler ["MouseButtonUp", _ehid_mousebu];  _initobject switchCamera _initcamview; _c cameraEffect ["Terminate", "BACK"]; camDestroy _c; spectate = false;  _l = false; titleText ["Surveillance Camera Off...","PLAIN DOWN"];titleFadeOut 4; }; };   if (!(_fo)) then { _cfalt = 1.0 + 100.0 * (getPosATL _c select 2) / 1000.0; if (_cfalt > 100.0) then { _cfalt = 100.0 }; };    if ( _be and _fo ) then { _be_cods = sqrt((_cp_r select 0)^2 + (_cp_r select 1)^2 + ((_cp_r select 2)-_be_ofz)^2); if ( _be_cods > 2.0 ) then { _be_cftn = 1.0 + (9.0/(_c distance _o)) };  _be_odr = ((getdir _o) -90.0) * -1; if (_be_odr >= 360.0) then { _be_odr = _be_odr - 360.0 }; if (_be_odr < 0.0) then { _be_odr = _be_odr + 360.0 };  _be_codr_t = _be_odr + _be_codr_a; if (_be_codr_t >= 360.0) then { _be_codr_t = _be_codr_t - 360.0 }; if (_be_codr_t < 0.0) then { _be_codr_t = _be_codr_t + 360.0 };  _be_codr = ( ((_cp_r select 0) atan2 (_cp_r select 1)) + 90.0 ) * -1; if (_be_codr >= 360.0) then { _be_codr = _be_codr - 360.0 }; if (_be_codr < 0.0) then { _be_codr = _be_codr + 360.0 };  _be_codr_d = _be_codr_t - _be_codr; if (_be_codr_d >= 360.0) then { _be_codr_d = _be_codr_d - 360.0 }; if (_be_codr_d < 0.0) then { _be_codr_d = _be_codr_d + 360.0 };  switch (true) do { case (_be_codr_d > 180.0 and _be_codr_d < 360.0): { _acx = _acx - (sin _be_codr) * (abs(sin(_be_codr_d/2))) * _be_cftn * BEHINDSPDAROUND; _acy = _acy + (cos _be_codr) * (abs(sin(_be_codr_d/2))) * _be_cftn * BEHINDSPDAROUND; }; case (_be_codr_d >= 0.0 and _be_codr_d <= 180.0): { _acx = _acx + (sin _be_codr) * (abs(sin(_be_codr_d/2))) * _be_cftn * BEHINDSPDAROUND; _acy = _acy - (cos _be_codr) * (abs(sin(_be_codr_d/2))) * _be_cftn * BEHINDSPDAROUND; }; };   _be_codv = ( ((_cp_r select 2) - _be_ofz) atan2 ((sqrt((_cp_r select 0)^2 + (_cp_r select 1)^2))) ) * (-1); _be_codv_d = _be_codv_t - _be_codv;  _be_odv = asin((vectorDir _o) select 2) * (cos _be_codr_a); _be_codv_r = _be_codv_t + _be_odv; if ((abs _be_odv_mx) > (abs _be_odv)) then { _be_codv_c = _be_codv_c - (_be_odv_mx - _be_odv); _be_codv_t = _be_codv_t - (_be_odv_mx - _be_odv); _be_odv_mx = _be_odv; } else { if ( (_be_codv_r - _be_codv_c) < -89.0) then { _be_codv_c = _be_codv_t + _be_odv + 89.0; _be_odv_mx = _be_odv; }; if ( (_be_codv_r - _be_codv_c) > 89.0) then { _be_codv_c = _be_codv_t + _be_odv - 89.0; _be_odv_mx = _be_odv; }; }; _be_codv_d = _be_codv_d - _be_codv_c + _be_odv;  _acx = _acx - (sin _be_codv_d) * (cos _be_codr) * (sin(_be_codv - 180.0)) * _be_cftn * BEHINDSPDAROUND * 0.5; _acy = _acy - (sin _be_codv_d) * (sin _be_codr) * (sin(_be_codv - 180.0)) * _be_cftn * BEHINDSPDAROUND * 0.5; _acz = _acz - (sin _be_codv_d) * (cos _be_codv) * _be_cftn * BEHINDSPDAROUND * 0.5;  _acx = _acx - (sin(_be_cods_t - _be_cods)) * (cos _be_codr) * (cos _be_codv) * 0.5; _acy = _acy - (sin(_be_cods_t - _be_cods)) * (sin _be_codr) * (cos _be_codv) * 0.5; _acz = _acz - (sin(_be_cods_t - _be_cods)) * (sin _be_codv) * 0.5;   if ( [_cp select 0, _cp select 1] distance [_op select 0, _op select 1] < 0.4 ) then { _cp_r = [ -0.41 * (cos _be_codr), -0.41 * (sin _be_codr), -_be_cods * (sin _be_codv) + _be_ofz]; _be_cods_t = sqrt((_cp_r select 0)^2 + (_cp_r select 1)^2 + ((_cp_r select 2)-_be_ofz)^2); if (_be_codv_t > 0.0) then { _be_codv_t = _be_codv_t - 1.0 } else { _be_codv_t = _be_codv_t + 1.0 }; _acx = 0.0; _acy = 0.0; _acz = 0.0;  };   _be_cdr_a = _be_cdr_a + _acdr; if ( _be_cdr_a >= 360.0 ) then { _be_cdr_a = _be_cdr_a - 360.0 }; if ( _be_cdr_a < 0.0 ) then { _be_cdr_a = _be_cdr_a + 360.0 };  _be_cdr_t = _dr - _be_cdr_a; if ( _be_cdr_t >= 360.0 ) then { _be_cdr_t = _be_cdr_t - 360.0 }; if ( _be_cdr_t < 0.0 ) then { _be_cdr_t = _be_cdr_t + 360.0 };  _be_cdr_d = _be_odr - _be_cdr_t; if ( _be_cdr_d >= 360.0 ) then { _be_cdr_d = _be_cdr_d - 360.0 }; if ( _be_cdr_d < 0.0 ) then { _be_cdr_d = _be_cdr_d + 360.0 };  _be_cdr_d = _be_cdr_d + _be_codr_a; if ( _be_cdr_d >= 360.0 ) then { _be_cdr_d = _be_cdr_d - 360.0 }; if ( _be_cdr_d < 0.0 ) then { _be_cdr_d = _be_cdr_d + 360.0 };  switch (true) do { case (_be_cdr_d >= 0.0 and _be_cdr_d < 180.0) : { _dr = _dr + (abs(sin(_be_cdr_d/2))) * _cfzm * (_be_cftn^BEHINDSPDROTATE) }; case (_be_cdr_d >= 180.0 and _be_cdr_d < 360.0) : { _dr = _dr - (abs(sin(_be_cdr_d/2))) * _cfzm * (_be_cftn^BEHINDSPDROTATE) }; }; if ( _dr >= 360.0 ) then { _dr = _dr - 360.0 }; if ( _dr < 0.0 ) then { _dr = _dr + 360.0 };  if ( _o isKindOf "Man" ) then { _be_crt = (((_o selectionPosition "head_axis") select 2) - 1.57) * (abs sin(30.0/(_be_cods+0.1))) };   _be_codv_d = _be_codv - _dv; _be_cdv_a = _be_cdv_a + _acdv; _be_codv_d = _be_codv_d + _be_cdv_a; switch (true) do { case (_be_codv_d > 0.0) : { _dv = _dv + abs(sin(_be_codv_d/2)) * _be_cftn * 5.0 }; case (_be_codv_d <= 0.0) : { _dv = _dv - abs(sin(_be_codv_d/2)) * _be_cftn * 5.0 }; }; _dv = (_dv min 89.0) max -89.0; };  if ( _fc and !(_fo) ) then { _fc_op = getPosASL _o; _fc_cp = getPosASL _c;  _fc_codr = ( ( ((_fc_op select 0) - (_fc_cp select 0)) atan2 ((_fc_op select 1) - (_fc_cp select 1)) ) -90.0 ) * (-1); if (_fc_codr >= 360.0) then { _fc_codr = _fc_codr - 360.0 }; if (_fc_codr < 0.0) then { _fc_codr = _fc_codr + 360.0 };  _fc_codr_d = _dr - _fc_codr; if (_fc_codr_d >= 360.0) then { _fc_codr_d = _fc_codr_d - 360.0 }; if (_fc_codr_d < 0.0) then { _fc_codr_d = _fc_codr_d + 360.0 };  _fc_cdr_a = _fc_cdr_a + _acdr; if (_fc_cdr_a >= 360.0) then { _fc_cdr_a = _fc_cdr_a - 360.0 }; if (_fc_cdr_a < 0.0) then { _fc_cdr_a = _fc_cdr_a + 360.0 };  _fc_codr_d = _fc_codr_d - _fc_cdr_a; if (_fc_codr_d >= 360.0) then { _fc_codr_d = _fc_codr_d - 360.0 }; if (_fc_codr_d < 0.0) then { _fc_codr_d = _fc_codr_d + 360.0 };  switch (true) do { case (_fc_codr_d > 0.0 and _fc_codr_d < 180.0) : { _dr = _dr - (abs(sin(_fc_codr_d/2))) * 20.0 }; case (_fc_codr_d > 180.0 and _fc_codr_d < 360.0) : { _dr = _dr + (abs(sin(_fc_codr_d/2))) * 20.0 }; }; if ( _dr >= 360.0 ) then { _dr = _dr - 360.0 }; if ( _dr < 0.0 ) then { _dr = _dr + 360.0 };   _fc_cods = [_fc_cp select 0, _fc_cp select 1] distance [_fc_op select 0, _fc_op select 1]; if ( _o isKindOf "Man" ) then { _fc_crt = (((_o selectionPosition "head_axis") select 2) - 1.57) * (abs sin(30/(_fc_cods+0.1))) };  _fc_codv = (sqrt(((_fc_op select 0) - (_fc_cp select 0))^2.0 + ((_fc_op select 1) - (_fc_cp select 1))^2.0) atan2 (((_fc_op select 2) - (_fc_cp select 2)) + _be_ofz + _fc_crt) - 90.0) * -1; _fc_codv_d = _fc_codv - _dv;  _fc_cdv_a = _fc_cdv_a + _acdv; _fc_codv_d = _fc_codv_d + _fc_cdv_a;  switch (true) do { case (_fc_codv_d > 0.0) : { _dv = _dv + abs(sin(_fc_codv_d/2)) * 20.0 }; case (_fc_codv_d <= 0.0) : { _dv = _dv - abs(sin(_fc_codv_d/2)) * 20.0 }; }; _dv = (_dv min 89.0) max -89.0; };   _cp_r = [ (_cp_r select 0) + _acx, (_cp_r select 1) + _acy, (_cp_r select 2) + _acz ]; if (_fo) then { _op = getPosASL _o }; _cp = [ (_op select 0) + (_cp_r select 0) , (_op select 1) + (_cp_r select 1), (_op select 2) + (_cp_r select 2) ]; _c setPosASL [ _cp select 0, _cp select 1, (_cp select 2) + _be_crt ]; _c camSetTarget [ (_cp select 0) + (cos _dr) * (cos _dv) * 100000.0, (_cp select 1) + (sin _dr) * (cos _dv) * 100000.0, (_cp select 2) + (sin _dv) * 100000.0]; _c camCommit 0.0;  if ( (getPosATL _c select 2) < 0.5 ) then { _c setPosATL [ _cp select 0, _cp select 1, 0.501 ]; if (_fo) then { _cp_r set [ 2, (getPosASL _c select 2) - _be_crt - (getPosASL _o select 2) ];  if (_be) then { _be_codv_t = _be_codv_t - 1.0; _be_codv = _be_codv_t; } else { _be_codv_t = ( ((_cp_r select 2) - _be_ofz) atan2 ((sqrt((_cp_r select 0)^2 + (_cp_r select 1)^2))) ) * (-1); _be_codv = _be_codv_t; _be_cods_t =  sqrt((_cp_r select 0)^2 + (_cp_r select 1)^2 + ((_cp_r select 2) - _be_ofz)^2); _be_cods = _be_cods_t; }; } else { _op set [ 2 , getPosASL _o select 2]; _cp_r set [ 2, (getPosASL _c select 2) - _be_crt - (_op select 2) ]; }; _acz = _acz max 0.0; };  _w = accTime / (diag_fps * 2); sleep _w; }; }; [player] call survcam;